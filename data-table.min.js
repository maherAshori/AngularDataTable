/*
 DataTable v1.0.2
 dependencies: 
                AngularJS v1.2.0 >
                jquery    v2.2.4 >
*/
var dataTable = angular.module("dataTable", []); dataTable.directive("table", ["$compile", "$filter", "tableService", function (a, e, i) { return { restrict: "A", scope: { list: "=", pageSize: "=", serverSideRecords: "=", currentPage: "=", returnAction: "&", filter: "=", filterBy: "@", filterAdvance: "=", lang: "@" }, link: function (t, n) { function r() { var a = (new Date).getTime(), e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) { var i = (a + 16 * Math.random()) % 16 | 0; return a = Math.floor(a / 16), ("x" === e ? i : 3 & i | 8).toString(16) }); return e } var l = angular.version; if (l.minor < 2 || l.dot < 0) return n.remove(), console.error("data-table not work on " + angular.version.full + " version"), console.warn("try use new version of angular 1.2.0 or uper"), !1; var d = { fa: { search: "جستجو کن", or: "یا", and: "و" }, en: { search: "search", or: "OR", and: "AND" } }; if (angular.isUndefined(t.lang)) t.language = d.en; else switch (t.lang) { case "en": t.language = d.en; break; case "fa": t.language = d.fa } t.items = [], t.paging = []; var s = angular.copy(r()), o = function (a, e) { return Math.ceil(a / e) }; n.attr("id", "id_" + s), n.prepend("<thead><tr></tr></thead>"); var c = '<nav id="id_' + s + '"><ul class="pagination"><li><a class="previous" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li><li class="repeat"><a ng-click="goToPage(page.row);pageAction()" ng-bind="page.row"></a></li><li><a class="next" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li></ul></nav>', f = '<div class="col-lg-4"><div class="angular-data-table-filter"><input type="text" class="form-control filtering" placeholder="{{language.search}}..."></div></div><br>', g = '<div class="col-lg-4"><div class="row"><a class="btn btn-default show-hide"><i class="fa fa-search"></i></a><div class="angular-data-table-filter"><div class="repeat"><input type="text" ng-model="filter.value" ng-change="onChange(filter.name,filter.value)" class="form-control filtering" placeholder="{{filter.setup.title}}"><br></div><div class="condition"><a class="btn btn-primary or">{{language.or}}</a> <a class="btn btn-primary and">{{language.and}}</a></div><hr><button class="btn btn-primary search">{{language.search}}</button></div></div></div>', u = angular.isUndefined(t.currentPage) ? 0 : t.currentPage, v = u, p = t.pageSize, h = n.find("tbody tr:first-child").data("orderby"), b = n.find("tbody tr:first-child").data("asc"), x = function (a, i, t, n, r) { angular.isUndefined(p) && (i = a.length); var l = e("orderBy")(a, n, r), d = e("startFrom")(l, t * i), s = e("limitTo")(d, i); return s }; t.$watch("list", function (a) { if (a) { var e; t.paging = [], e = angular.isUndefined(t.serverSideRecords) ? o(a.length, t.pageSize) : o(t.serverSideRecords, t.pageSize); for (var i = 0; e > i; i++) t.paging.push({ row: i + 1 }); t.items = x(a, p, u, h, b) } }, !0), t.orderTable = function (a) { var e = (n.find(".binding-to-" + a).text(), n.find(".binding-to-" + a + " span")), i = n.find(".binding-to-" + a).data("source"); n.find("thead tr th").each(function () { var a = $(this).find("span"); a.html(' <i class="fa fa-sort"></i>') }), h = i, b = !b, b ? e.html(' <i class="fa fa-sort-alpha-desc"></i>') : e.html(' <i class="fa fa-sort-alpha-asc"></i>'), t.items = x(t.list, p, u, h, b), t.pageAction() }, t.previousPage = function () { var a = u; return 0 >= a ? !1 : (u--, v = a - 1, t.items = x(t.list, p, a - 1, h, b), !1) }, t.goToPage = function (a) { v = a - 1, t.items = x(t.list, p, a - 1, h, b) }, t.nextPage = function () { var a = u, e = t.paging.length; return a >= e - 1 ? !1 : (u++, v = a + 1, t.items = x(t.list, p, a + 1, h, b), !1) }, t.pageAction = function () { var a = { orderByOn: h, orderType: b, pageSize: p, pageIndex: v, filters: t.advanceFilters }; i.setAction(a), t.returnAction() }; var m = n.find("tbody tr:first-child").attr("ng-repeat", "item in items"); t.filter && (m = n.find("tbody tr:first-child").attr("ng-repeat", "item in items | filter:filtering")); var y = n.find("tbody tr td").each(function (e) { var i = $(this), r = i.data("binding"), l = i.data("header-source"), d = i.data("header"), s = i.data("sortable"); if (angular.isUndefined(r) || i.html('<span ng-bind="item.' + r + '"></span>'), n.find("thead tr:first-child").append('<th data-source="' + l + '" class="binding-to-' + e + '">' + d + "</th>"), s) { var o = n.find(".binding-to-" + e).attr("ng-click", "orderTable(" + e + ")"); n.find(".binding-to-" + e).append('<span><i class="fa fa-sort"></i></span>'), a(o)(t) } }); if (t.condition = function (a) { q.filters = [], q.condition = a }, t.getFilters = function () { q.filters = t.advanceFilters, i.setAction(q), t.returnAction() }, !angular.isUndefined(t.pageSize)) { n.after(c); var A = $("nav#id_" + s + " .previous").attr("ng-click", "previousPage()"), w = $("nav#id_" + s + " .repeat").attr("ng-repeat", "page in paging"), S = $("nav#id_" + s + " .next").attr("ng-click", "nextPage()"); a(A)(t), a(w)(t), a(S)(t) } if (t.filter) if (angular.isUndefined(t.filterAdvance)) { n.before(f); var T, k = $(".angular-data-table-filter"); T = angular.isUndefined(t.filterBy) ? k.find(".filtering").attr("ng-model", "filtering") : k.find(".filtering").attr("ng-model", "filtering." + t.filterBy), a(T)(t) } else { t.advanceFilters = [], n.before(g); var P = $(".angular-data-table-filter"), B = t.filterAdvance.fields, F = e("filter")(B, { filter: !0 }, !0); t.advanceFilters = F; var U = P.find(".repeat").attr("ng-repeat", "filter in advanceFilters"), z = P.find(".search").attr("ng-click", "getFilters()"), _ = P.find(".condition .or").attr("ng-click", "condition(0)"), R = P.find(".condition .and").attr("ng-click", "condition(1)"), M = $(".show-hide").attr("ng-click", "filterBox = !filterBox"), O = P.attr("ng-show", "filterBox"), q = { orderByOn: h, orderType: b, pageSize: p, pageIndex: v, condition: 1, filters: [] }; a(U)(t), a(z)(t), a(_)(t), a(R)(t), a(M)(t), a(O)(t) } a(m)(t), a(y)(t) } } }]), dataTable.service("tableService", function () { var a; this.setAction = function (e) { a = e }, this.getAction = function () { return a } }), dataTable.filter("startFrom", function () { return function (a, e) { return e = +e, a.slice(e) } });