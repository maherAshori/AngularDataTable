/*
 DataTable v1.0.4
 dependencies: 
                AngularJS v1.2.0 >
                jquery    v2.2.4 >
*/
var dataTable = angular.module("dataTable", []); dataTable.directive("table", ["$compile", "$filter", "tableService", function (a, e, i) { return { restrict: "A", scope: { list: "=", pageSize: "=", serverSideRecords: "=", currentPage: "=", returnAction: "&", filter: "=", filterBy: "@", filterAdvance: "=", lang: "@" }, link: function (n, t) { function r() { var a = (new Date).getTime(), e = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (e) { var i = (a + 16 * Math.random()) % 16 | 0; return a = Math.floor(a / 16), ("x" === e ? i : 3 & i | 8).toString(16) }); return e } var l = angular.version; if (l.minor < 2 || l.dot < 0) return t.remove(), console.error("data-table not work on " + angular.version.full + " version"), console.warn("try use new version of angular 1.2.0 or uper"), !1; var d = angular.isUndefined(n.currentPage) ? 0 : n.currentPage, s = d, o = n.pageSize, c = t.find("tbody tr:first-child").data("orderby"), g = t.find("tbody tr:first-child").data("asc"), f = { fa: { search: "جستجو کن", or: "یا", and: "و" }, en: { search: "search", or: "OR", and: "AND" } }; if (angular.isUndefined(n.lang)) n.language = f.en; else switch (n.lang) { case "en": n.language = f.en; break; case "fa": n.language = f.fa } n.items = [], n.paging = [], n.condition = 0; var u = angular.copy(r()), v = function (a, e) { return Math.ceil(a / e) }; t.attr("id", "id_" + u), t.prepend("<thead><tr></tr></thead>"); var p = '<nav id="id_' + u + '"><ul class="pagination"><li><a class="previous" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li><li class="repeat"><a ng-click="goToPage(page.row);pageAction();" ng-bind="page.row"></a></li><li><a class="next" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li></ul></nav>', h = '<div class="col-lg-4"><div class="angular-data-table-filter"><input type="text" class="form-control filtering" placeholder="{{language.search}}..."></div></div><br>', b = '<div class="col-lg-4"><div class="row"><a class="btn btn-default show-hide search-advance-button"><i class="fa fa-search"></i></a><div class="angular-data-table-filter"><div class="repeat"><div class="form-group"><input type="text" ng-model="filter.value" ng-if="filter.setup.type == \'text\'" ng-change="onChange(filter.name,filter.value)" class="form-control filtering" placeholder="{{filter.setup.title}}"></div><div class="form-group"><select class="form-control" ng-if="filter.setup.type == \'select\'" ng-model="filter.value" ng-options="option as option.name for option in filter.setup.options" ng-change="onChange(filter.name,filter.value)"></select></div></div><div class="condition"><a class="btn btn-primary or" ng-class="{\'active\': condition === 0}">{{language.or}}</a> <a class="btn btn-primary and" ng-class="{\'active\': condition === 1}">{{language.and}}</a></div><hr><button class="btn btn-primary search">{{language.search}}</button></div></div></div>', x = function (a, i, t, r, l) { angular.isUndefined(o) && (i = a.length); var d = e("orderBy")(a, r, l), s = e("startFrom")(d, t * i), c = e("limitTo")(angular.isUndefined(n.serverSideRecords) ? s : d, i); return c }; n.$watch("list", function (a) { if (a) { var e; n.paging = [], e = angular.isUndefined(n.serverSideRecords) ? v(a.length, n.pageSize) : v(n.serverSideRecords, n.pageSize); for (var i = 0; e > i; i++) n.paging.push({ row: i + 1 }); n.items = x(a, o, d, c, g) } }, !0), n.orderTable = function (a) { var e = (t.find(".binding-to-" + a).text(), t.find(".binding-to-" + a + " span")), i = t.find(".binding-to-" + a).data("source"); t.find("thead tr th").each(function () { var a = $(this).find("span"); a.html(' <i class="fa fa-sort"></i>') }), c = i, g = !g, g ? e.html(' <i class="fa fa-sort-alpha-desc"></i>') : e.html(' <i class="fa fa-sort-alpha-asc"></i>'), n.items = x(n.list, o, d, c, g), n.pageAction() }, n.previousPage = function () { var a = d; return 0 === a ? !1 : (d--, s = a - 1, n.currentPage = s, n.items = x(n.list, o, a - 1, c, g), void 0) }, n.goToPage = function (a) { s = a - 1, n.currentPage = s, n.items = x(n.list, o, a - 1, c, g) }, n.nextPage = function () { var a = d, e = n.paging.length; return a === e - 1 ? !1 : (d++, s = a + 1, n.currentPage = s, n.items = x(n.list, o, a + 1, c, g), void 0) }, n.pageAction = function () { var a = { orderByOn: c, orderType: g, pageSize: o, pageIndex: s, filters: n.advanceFilters }; n.filtersHandler(a) }; var m = t.find("tbody tr:first-child").attr("ng-repeat", "item in items"); n.filter && (m = t.find("tbody tr:first-child").attr("ng-repeat", "item in items | filter:filtering")); var y = t.find("tbody tr td").each(function (e) { var i = $(this), r = i.data("binding"), l = i.data("header-source"), d = i.data("header"), s = i.data("sortable"); if (angular.isUndefined(r) || i.html('<span ng-bind="item.' + r + '"></span>'), i.find("[data-binding]").each(function () { var a = $(this), e = a.data("binding"); a.attr("ng-bind", "item." + e) }), t.find("thead tr:first-child").append('<th data-source="' + l + '" class="binding-to-' + e + '">' + d + "</th>"), s) { var o = t.find(".binding-to-" + e).attr("ng-click", "orderTable(" + e + ")"); t.find(".binding-to-" + e).append('<span><i class="fa fa-sort"></i></span>'), a(o)(n) } }); if (n.filtersHandler = function (a) { var e = []; angular.forEach(a.filters, function (a) { angular.isUndefined(a.value) || e.push({ name: a.name, value: a.value }) }), a.filters = e, i.setAction(a), n.returnAction() }, n.conditionHanlder = function (a) { M.filters = [], M.condition = a, n.condition = a }, n.getFilters = function () { M.filters = n.advanceFilters, n.filtersHandler(M) }, !angular.isUndefined(n.pageSize)) { t.after(p); var P = $("nav#id_" + u + " .previous").attr("ng-click", "previousPage();pageAction();"); P = $("nav#id_" + u + " .previous").parent().addClass("{{currentPage === 0 ? 'disabled':''}}"); var A = $("nav#id_" + u + " .repeat").attr("ng-repeat", "page in paging"); A = $("nav#id_" + u + " .repeat").addClass("{{currentPage + 1 === page.row ? 'active':''}}"); var w = $("nav#id_" + u + " .next").attr("ng-click", "nextPage();pageAction();"); w = $("nav#id_" + u + " .next").parent().addClass("{{currentPage == paging.length - 1 ? 'disabled':''}}"), a(P)(n), a(A)(n), a(w)(n) } if (n.filter) if (angular.isUndefined(n.filterAdvance)) { t.before(h); var S, T = $(".angular-data-table-filter"); S = angular.isUndefined(n.filterBy) ? T.find(".filtering").attr("ng-model", "filtering") : T.find(".filtering").attr("ng-model", "filtering." + n.filterBy), a(S)(n) } else { n.advanceFilters = [], t.before(b); var k = $(".angular-data-table-filter"), U = n.filterAdvance.fields, B = e("filter")(U, { filter: !0 }, !0); n.advanceFilters = B; var F = k.find(".repeat").attr("ng-repeat", "filter in advanceFilters"), _ = k.find(".search").attr("ng-click", "getFilters()"), z = k.find(".condition .or").attr("ng-click", "conditionHanlder(0)"), H = k.find(".condition .and").attr("ng-click", "conditionHanlder(1)"), C = $(".show-hide").attr("ng-click", "filterBox = !filterBox"), R = k.attr("ng-show", "filterBox"), M = { orderByOn: c, orderType: g, pageSize: o, pageIndex: s, condition: 1, filters: [] }; a(F)(n), a(_)(n), a(z)(n), a(H)(n), a(C)(n), a(R)(n) } a(m)(n), a(y)(n) } } }]), dataTable.service("tableService", function () { var a; this.setAction = function (e) { a = e }, this.getAction = function () { return a } }), dataTable.filter("startFrom", function () { return function (a, e) { return e = +e, a.slice(e) } });