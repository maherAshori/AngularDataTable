/*
 DataTable v1.0.3
 dependencies: 
                AngularJS v1.2.0 >
                jquery    v2.2.4 >
*/
var dataTable = angular.module("dataTable", []); dataTable.directive("table", ["$compile", "$filter", "tableService", function (e, a, t) { return { restrict: "A", scope: { list: "=", pageSize: "=", serverSideRecords: "=", currentPage: "=", returnAction: "&", filter: "=", filterBy: "@", filterAdvance: "=", lang: "@" }, link: function (i, n) { function r() { var e = (new Date).getTime(), a = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (a) { var t = (e + 16 * Math.random()) % 16 | 0; return e = Math.floor(e / 16), ("x" === a ? t : 3 & t | 8).toString(16) }); return a } var l = angular.version; if (l.minor < 2 || l.dot < 0) return n.remove(), console.error("data-table not work on " + angular.version.full + " version"), console.warn("try use new version of angular 1.2.0 or uper"), !1; var o = { fa: { search: "جستجو کن", or: "یا", and: "و" }, en: { search: "search", or: "OR", and: "AND" } }; if (angular.isUndefined(i.lang)) i.language = o.en; else switch (i.lang) { case "en": i.language = o.en; break; case "fa": i.language = o.fa } i.items = [], i.paging = []; var s = angular.copy(r()), d = function (e, a) { return Math.ceil(e / a) }; n.attr("id", "id_" + s), n.prepend("<thead><tr></tr></thead>"); var c = '<nav id="id_' + s + '"><ul class="pagination"><li><a class="previous" aria-label="Previous"><span aria-hidden="true">&laquo;</span></a></li><li class="repeat"><a ng-click="goToPage(page.row);pageAction()" ng-bind="page.row"></a></li><li><a class="next" aria-label="Next"><span aria-hidden="true">&raquo;</span></a></li></ul></nav>', f = '<div class="col-lg-4"><div class="angular-data-table-filter"><input type="text" class="form-control filtering" placeholder="{{language.search}}..."></div></div><br>', g = '<div class="col-lg-4"><div class="row"><a class="btn btn-default show-hide"><i class="fa fa-search"></i></a><div class="angular-data-table-filter"><div class="repeat"><div class="form-group"><input type="text" ng-model="filter.value" ng-if="filter.setup.type == \'text\'" ng-change="onChange(filter.name,filter.value)" class="form-control filtering" placeholder="{{filter.setup.title}}"></div><div class="form-group"><select class="form-control" ng-if="filter.setup.type == \'select\'" ng-model="filter.value" ng-options="option as option.name for option in filter.setup.options" ng-change="onChange(filter.name,filter.value)"></select></div></div><div class="condition"><a class="btn btn-primary or">{{language.or}}</a> <a class="btn btn-primary and">{{language.and}}</a></div><hr><button class="btn btn-primary search">{{language.search}}</button></div></div></div>', u = angular.isUndefined(i.currentPage) ? 0 : i.currentPage, p = u, v = i.pageSize, h = n.find("tbody tr:first-child").data("orderby"), b = n.find("tbody tr:first-child").data("asc"), x = function (e, t, i, n, r) { angular.isUndefined(v) && (t = e.length); var l = a("orderBy")(e, n, r), o = a("startFrom")(l, i * t), s = a("limitTo")(o, t); return s }; i.$watch("list", function (e) { if (e) { var a; i.paging = [], a = angular.isUndefined(i.serverSideRecords) ? d(e.length, i.pageSize) : d(i.serverSideRecords, i.pageSize); for (var t = 0; a > t; t++) i.paging.push({ row: t + 1 }); i.items = x(e, v, u, h, b) } }, !0), i.orderTable = function (e) { var a = (n.find(".binding-to-" + e).text(), n.find(".binding-to-" + e + " span")), t = n.find(".binding-to-" + e).data("source"); n.find("thead tr th").each(function () { var e = $(this).find("span"); e.html(' <i class="fa fa-sort"></i>') }), h = t, b = !b, b ? a.html(' <i class="fa fa-sort-alpha-desc"></i>') : a.html(' <i class="fa fa-sort-alpha-asc"></i>'), i.items = x(i.list, v, u, h, b), i.pageAction() }, i.previousPage = function () { var e = u; return 0 >= e ? !1 : (u--, p = e - 1, i.items = x(i.list, v, e - 1, h, b), !1) }, i.goToPage = function (e) { p = e - 1, i.items = x(i.list, v, e - 1, h, b) }, i.nextPage = function () { var e = u, a = i.paging.length; return e >= a - 1 ? !1 : (u++, p = e + 1, i.items = x(i.list, v, e + 1, h, b), !1) }, i.pageAction = function () { var e = { orderByOn: h, orderType: b, pageSize: v, pageIndex: p, filters: i.advanceFilters }; t.setAction(e), i.returnAction() }; var m = n.find("tbody tr:first-child").attr("ng-repeat", "item in items"); i.filter && (m = n.find("tbody tr:first-child").attr("ng-repeat", "item in items | filter:filtering")); var y = n.find("tbody tr td").each(function (a) { var t = $(this), r = t.data("binding"), l = t.data("header-source"), o = t.data("header"), s = t.data("sortable"); if (angular.isUndefined(r) || t.html('<span ng-bind="item.' + r + '"></span>'), n.find("thead tr:first-child").append('<th data-source="' + l + '" class="binding-to-' + a + '">' + o + "</th>"), s) { var d = n.find(".binding-to-" + a).attr("ng-click", "orderTable(" + a + ")"); n.find(".binding-to-" + a).append('<span><i class="fa fa-sort"></i></span>'), e(d)(i) } }); if (i.condition = function (e) { q.filters = [], q.condition = e }, i.getFilters = function () { q.filters = i.advanceFilters, t.setAction(q), i.returnAction() }, !angular.isUndefined(i.pageSize)) { n.after(c); var A = $("nav#id_" + s + " .previous").attr("ng-click", "previousPage()"), w = $("nav#id_" + s + " .repeat").attr("ng-repeat", "page in paging"), S = $("nav#id_" + s + " .next").attr("ng-click", "nextPage()"); e(A)(i), e(w)(i), e(S)(i) } if (i.filter) if (angular.isUndefined(i.filterAdvance)) { n.before(f); var T, k = $(".angular-data-table-filter"); T = angular.isUndefined(i.filterBy) ? k.find(".filtering").attr("ng-model", "filtering") : k.find(".filtering").attr("ng-model", "filtering." + i.filterBy), e(T)(i) } else { i.advanceFilters = [], n.before(g); var P = $(".angular-data-table-filter"), B = i.filterAdvance.fields, F = a("filter")(B, { filter: !0 }, !0); i.advanceFilters = F; var U = P.find(".repeat").attr("ng-repeat", "filter in advanceFilters"), z = P.find(".search").attr("ng-click", "getFilters()"), _ = P.find(".condition .or").attr("ng-click", "condition(0)"), R = P.find(".condition .and").attr("ng-click", "condition(1)"), M = $(".show-hide").attr("ng-click", "filterBox = !filterBox"), O = P.attr("ng-show", "filterBox"), q = { orderByOn: h, orderType: b, pageSize: v, pageIndex: p, condition: 1, filters: [] }; e(U)(i), e(z)(i), e(_)(i), e(R)(i), e(M)(i), e(O)(i) } e(m)(i), e(y)(i) } } }]), dataTable.service("tableService", function () { var e; this.setAction = function (a) { e = a }, this.getAction = function () { return e } }), dataTable.filter("startFrom", function () { return function (e, a) { return a = +a, e.slice(a) } });